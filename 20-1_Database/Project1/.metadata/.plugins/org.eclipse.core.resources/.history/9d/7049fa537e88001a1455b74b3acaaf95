import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public class Main {
	public static void main(String arg[]) {	
		String url = "jdbc:postgresql://127.0.0.1:5432/project_movie";
		String userid = "postgres";
		String pw = "cse3207";
		String desc = "Translated SQL : ";
		String sql;
		
		try {
			Class.forName("org.postgresql.Driver");
		}
		catch (ClassNotFoundException e){
			System.out.println("Where is your PostgresSQL JDBC Driver? Include in your library path");
			e.printStackTrace();
			return;
		}
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		try {
			conn = DriverManager.getConnection(url, userid, pw);
			System.out.println("DB 연결 성공!");
		}
		catch (SQLException e) {
			System.out.println("Connection Failed! Check output console");
			e.printStackTrace();
			return;
		}
		
		// 1. Create Table and insert initial data
		try {
			sql = "CREATE TABLE director(\r\n" + 
					"	directorID serial primary key,\r\n" + 
					"	directorName varchar(40),\r\n" + 
					"	dateOfBirth char(10),\r\n" + 
					"	dateOfDeath char(10)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE actor(\r\n" + 
					"	actorID serial primary key,\r\n" + 
					"	actorName varchar(40),\r\n" + 
					"	dateOfBirth char(10)\r\n" + 
					"	dateOfDeath char(10)\r\n" + 
					"	gender int\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE movie(\r\n" + 
					"	movieID serial primary key,\r\n" + 
					"	movieName varchar(50),\r\n" + 
					"	releaseYear char(4),\r\n" + 
					"	releaseMonth char(2),\r\n" + 
					"	releaseDate char(2),\r\n" + 
					"	publisherName varchar(50),\r\n" + 
					"	avgRate float\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE award(\r\n" + 
					"	awardID serial primary key,\r\n" + 
					"	awardName varchar(50)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE genre(\r\n" + 
					"	genreName varchar(30) primary key\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE movieGenre (\r\n" + 
					"	movieID int,\r\n" + 
					"	genreName varchar(30),\r\n" + 
					"	foreign key(movieID) references movie,\r\n" + 
					"	foreign key(genreName) references genre,\r\n" + 
					"	primary key(movieID, genreName)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE movieObtain(\r\n" + 
					"	movieID int,\r\n" + 
					"	awardID int,\r\n" + 
					"	year char(4),\r\n" + 
					"	foreign key(movieID) references movie,\r\n" + 
					"	foreign key(awardID) references award,\r\n" + 
					"	primary key(movieID, awardID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE actorObtain(\r\n" + 
					"	actorID int,\r\n" + 
					"	awardID int,\r\n" + 
					"	year char(4),\r\n" + 
					"	foreign key(actorID) references actor,\r\n" + 
					"	foreign key(awardID) references award,\r\n" + 
					"	primary key(actorID, awardID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE directorObtain(\r\n" + 
					"	directorID int,\r\n" + 
					"	awardID int,\r\n" + 
					"	year char(4),\r\n" + 
					"	foreign key(directorID) references director,\r\n" + 
					"	foreign key(awardID) references award,\r\n" + 
					"	primary key(directorID, awardID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE casting(\r\n" + 
					"	movieID int,\r\n" + 
					"	actorID int,\r\n" + 
					"	role int,\r\n" + 
					"	foreign key(movieID) references movie,\r\n" + 
					"	foreign key(actorID) references actor,\r\n" + 
					"	primary key(movieID, actorID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE make(\r\n" + 
					"	movieID int,\r\n" + 
					"	directorID int,\r\n" + 
					"	foreign key(movieID) references movie,\r\n" + 
					"	foreign key(directorID) references director,\r\n" + 
					"	primary key(movieID, directorID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE customer (\r\n" + 
					"	customerID serial,\r\n" + 
					"	customerName varchar(40),\r\n" + 
					"	dateOfBirth char(10),\r\n" + 
					"	gender int,\r\n" + 
					"	primary key(customerID)\r\n" + 
					");\r\n" + 
					"\r\n" + 
					"CREATE TABLE customerRate(\r\n" + 
					"	customerID int,\r\n" + 
					"	movieID int,\r\n" + 
					"	rate int,\r\n" + 
					"	foreign key(customerID) references customer,\r\n" + 
					"	foreign key(movieID) references movie,\r\n" + 
					"	primary key(customerID, movieID)\r\n" + 
					");";
			pstmt = conn.prepareStatement(sql);
			pstmt.executeUpdate();
			System.out.println("Table 생성 완료!");
		} catch (SQLException e) {
			System.out.println("1번 Query error");
			e.printStackTrace();
			return;
		}
		
		
		System.out.println(conn);

		
	}
}
